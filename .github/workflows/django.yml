name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./src/requirements.txt

    - name: Run Tests
      run: |
        export PYTHONPATH=src
        python ./src/manage.py test || exit 1

    - name: Lint with Ruff
      run: |
        pip install ruff
        ruff check --output-format=github ./src
      continue-on-error: true

    - name: Build and Push the Docker image
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      run: |
        docker build --file Dockerfile --tag erromu/devsu-demo:0.1 .
        echo $DOCKER_TOKEN | docker login  --username $DOCKER_USER --password-stdin
        docker push erromu/devsu-demo:0.1

    - name: Start minikube
      uses: medyagh/setup-minikube@latest
    - name: Try the cluster!
      run: kubectl get pods -A
    - name: Deploy to minikube
      run: |
        kubectl apply -f ./k8s.yaml
        kubectl wait --timeout=90s --for=condition=ready pod -l app=devsu-demo
        kubectl describe deployment devsu
        kubectl describe service devsu
    - name: Test service URLs
      run: |
        minikube service list
        minikube service devsu --url
        echo "------------------opening the service------------------"
        curl $(minikube service devsu --url)
